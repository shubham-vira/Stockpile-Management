
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import jiconfont.icons.Elusive;
import jiconfont.icons.FontAwesome;
import jiconfont.swing.IconFontSwing;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shubham
 */
public class StockForm extends javax.swing.JPanel {

    /**
     * Creates new form Stocks
     */
    public StockForm() {
        initComponents();
        
        conn = MySqlConnect.connectDB();
        
        refreshAddCategory();
        jcbCategory.setSelectedIndex(-1);
        
        sql = "SELECT productid, productname, mass, mrp, stock FROM product";
        updateTableData(sql);
       
        IconFontSwing.register(FontAwesome.getIconFont());
        IconFontSwing.register(Elusive.getIconFont());
        
        
        btnAdd.setIcon(IconFontSwing.buildIcon(Constants.addButton, 30, new Color(0,246,237)));
        btnAddCategory.setIcon(IconFontSwing.buildIcon(Constants.addButton, 24, new Color(0,246,237)));
        btnUpdate.setIcon(IconFontSwing.buildIcon(Constants.updateButton,30,new Color(0,246,237)));
        btnDelete.setIcon(IconFontSwing.buildIcon(Constants.deleteButton, 30,new Color(0,246,237)));
        btnClear.setIcon(IconFontSwing.buildIcon(Constants.clearButton, 30,new Color(0,246,237)));
    }
    
        void refreshAddCategory(){
            try {
                jcbCategory.removeAllItems();
                sql = "SELECT categoryname from category";
                statement = conn.createStatement();
                rs = statement.executeQuery(sql);

                while (rs.next()) {
                    jcbCategory.addItem(rs.getString(1));
                }
                jcbCategory.setSelectedIndex(-1);
            } catch (Exception e) {
            }finally{
                try {
                    rs.close();
                    statement.close();
                } catch (Exception e) {
                }
            }
        }

        void updateTableData(String sql){
            try {
                preparedStatement = conn.prepareStatement(sql);
                rs = preparedStatement.executeQuery();
                jtbStocks.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Issue : " + e);
            }
            finally{
                try {
                    rs.close();
                    preparedStatement.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Problem in closing re or prepared statement :  " + e);
                }
            }
        }
    
    private void clearFields(){
        txtProductName.setText("");
        txtQuantity.setText("");
        txtIgst.setText("0");
        txtCgst.setText("0");
        txtSgst.setText("0");
        txtCost.setText("");
        txtStock.setText("");
        jcbCategory.setSelectedIndex(-1);
    }

    private float percentageCal(float value, float percentage){
        float ans = value*(percentage/100.0f);
        return ans;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProductName = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        jspProductName = new javax.swing.JSeparator();
        txtQuantity = new javax.swing.JTextField();
        jspQuantity = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbStocks = new javax.swing.JTable();
        btnAddCategory = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblIgst = new javax.swing.JLabel();
        txtIgst = new javax.swing.JTextField();
        jspStock = new javax.swing.JSeparator();
        lblCategoryName = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jcbCategory = new javax.swing.JComboBox<>();
        lblStock1 = new javax.swing.JLabel();
        txtCgst = new javax.swing.JTextField();
        jspStock1 = new javax.swing.JSeparator();
        lblStock2 = new javax.swing.JLabel();
        txtSgst = new javax.swing.JTextField();
        jspStock2 = new javax.swing.JSeparator();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jspStock3 = new javax.swing.JSeparator();
        lblCost = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jspQuantity1 = new javax.swing.JSeparator();
        lblcust = new javax.swing.JLabel();

        setBackground(new java.awt.Color(29, 35, 59));
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(1820, 1000));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblProductName.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("Product Name");
        add(lblProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 200, 40));

        lblQuantity.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantity.setText("Quantity ");
        add(lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 150, 40));

        txtProductName.setBackground(new java.awt.Color(29, 35, 59));
        txtProductName.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtProductName.setForeground(new java.awt.Color(0, 246, 237));
        txtProductName.setBorder(null);
        txtProductName.setCaretColor(new java.awt.Color(0, 246, 237));
        txtProductName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProductNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductNameFocusLost(evt);
            }
        });
        txtProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductNameActionPerformed(evt);
            }
        });
        add(txtProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, 320, -1));

        jspProductName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jspProductNameFocusGained(evt);
            }
        });
        add(jspProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 320, 10));

        txtQuantity.setBackground(new java.awt.Color(29, 35, 59));
        txtQuantity.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtQuantity.setForeground(new java.awt.Color(0, 246, 237));
        txtQuantity.setBorder(null);
        txtQuantity.setCaretColor(new java.awt.Color(0, 246, 237));
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantityFocusLost(evt);
            }
        });
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 320, -1));
        add(jspQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 320, 10));

        jtbStocks.setAutoCreateRowSorter(true);
        jtbStocks.setBackground(new java.awt.Color(29, 35, 59));
        jtbStocks.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 35, 59)));
        jtbStocks.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        jtbStocks.setForeground(new java.awt.Color(0, 246, 237));
        jtbStocks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbStocks.setFillsViewportHeight(true);
        jtbStocks.setGridColor(new java.awt.Color(204, 204, 204));
        jtbStocks.setRowHeight(30);
        jtbStocks.setRowMargin(2);
        jtbStocks.setSelectionBackground(new java.awt.Color(0, 246, 237));
        jtbStocks.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtbStocks.setSurrendersFocusOnKeystroke(true);
        jtbStocks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbStocksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbStocks);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 220, 710, 400));

        btnAddCategory.setBackground(new java.awt.Color(29, 35, 59));
        btnAddCategory.setFont(new java.awt.Font("Share Tech Mono", 1, 14)); // NOI18N
        btnAddCategory.setForeground(new java.awt.Color(0, 246, 237));
        btnAddCategory.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 246, 237), 1, true));
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });
        add(btnAddCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 200, 40, 40));

        btnUpdate.setBackground(new java.awt.Color(29, 35, 59));
        btnUpdate.setFont(new java.awt.Font("Share Tech Mono", 0, 20)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 246, 237));
        btnUpdate.setText(" UPDATE");
        btnUpdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 246, 237), 1, true));
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 760, 140, 50));

        btnDelete.setBackground(new java.awt.Color(29, 35, 59));
        btnDelete.setFont(new java.awt.Font("Share Tech Mono", 0, 20)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 246, 237));
        btnDelete.setText(" DELETE");
        btnDelete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 246, 237), 1, true));
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 760, 140, 50));

        btnClear.setBackground(new java.awt.Color(29, 35, 59));
        btnClear.setFont(new java.awt.Font("Share Tech Mono", 0, 20)); // NOI18N
        btnClear.setForeground(new java.awt.Color(0, 246, 237));
        btnClear.setText(" CLEAR");
        btnClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 246, 237), 1, true));
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.setNextFocusableComponent(jcbCategory);
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearMouseExited(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 760, 140, 50));

        lblIgst.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblIgst.setForeground(new java.awt.Color(255, 255, 255));
        lblIgst.setText("IGST");
        add(lblIgst, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, 170, 30));

        txtIgst.setBackground(new java.awt.Color(29, 35, 59));
        txtIgst.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtIgst.setForeground(new java.awt.Color(0, 246, 237));
        txtIgst.setText("0");
        txtIgst.setBorder(null);
        txtIgst.setCaretColor(new java.awt.Color(0, 246, 237));
        txtIgst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIgstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIgstFocusLost(evt);
            }
        });
        add(txtIgst, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 560, 320, -1));
        add(jspStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 590, 320, 10));

        lblCategoryName.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblCategoryName.setForeground(new java.awt.Color(255, 255, 255));
        lblCategoryName.setText("Category Name");
        add(lblCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 200, 40));

        btnAdd.setBackground(new java.awt.Color(29, 35, 59));
        btnAdd.setFont(new java.awt.Font("Share Tech Mono", 0, 20)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 246, 237));
        btnAdd.setText(" ADD");
        btnAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 246, 237), 1, true));
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 760, 140, 50));

        jcbCategory.setBackground(new java.awt.Color(29, 35, 59));
        jcbCategory.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        jcbCategory.setForeground(new java.awt.Color(0, 246, 237));
        jcbCategory.setToolTipText("");
        jcbCategory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 246, 237)));
        jcbCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add(jcbCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 320, 35));

        lblStock1.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblStock1.setForeground(new java.awt.Color(255, 255, 255));
        lblStock1.setText("CGST");
        add(lblStock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 170, 30));

        txtCgst.setBackground(new java.awt.Color(29, 35, 59));
        txtCgst.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtCgst.setForeground(new java.awt.Color(0, 246, 237));
        txtCgst.setText("0");
        txtCgst.setBorder(null);
        txtCgst.setCaretColor(new java.awt.Color(0, 246, 237));
        txtCgst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCgstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCgstFocusLost(evt);
            }
        });
        add(txtCgst, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 440, 320, -1));
        add(jspStock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, 320, 10));

        lblStock2.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblStock2.setForeground(new java.awt.Color(255, 255, 255));
        lblStock2.setText("SGST");
        add(lblStock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 490, 170, 30));

        txtSgst.setBackground(new java.awt.Color(29, 35, 59));
        txtSgst.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtSgst.setForeground(new java.awt.Color(0, 246, 237));
        txtSgst.setText("0");
        txtSgst.setBorder(null);
        txtSgst.setCaretColor(new java.awt.Color(0, 246, 237));
        txtSgst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSgstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSgstFocusLost(evt);
            }
        });
        add(txtSgst, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 500, 320, -1));
        add(jspStock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, 320, 10));

        lblStock.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblStock.setForeground(new java.awt.Color(255, 255, 255));
        lblStock.setText("Stock");
        add(lblStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 610, 170, 30));

        txtStock.setBackground(new java.awt.Color(29, 35, 59));
        txtStock.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtStock.setForeground(new java.awt.Color(0, 246, 237));
        txtStock.setBorder(null);
        txtStock.setCaretColor(new java.awt.Color(0, 246, 237));
        txtStock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStockFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStockFocusLost(evt);
            }
        });
        add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 620, 320, -1));
        add(jspStock3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 650, 320, 10));

        lblCost.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        lblCost.setForeground(new java.awt.Color(255, 255, 255));
        lblCost.setText("Cost");
        add(lblCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, 150, 40));

        txtCost.setBackground(new java.awt.Color(29, 35, 59));
        txtCost.setFont(new java.awt.Font("Share Tech Mono", 0, 24)); // NOI18N
        txtCost.setForeground(new java.awt.Color(0, 246, 237));
        txtCost.setBorder(null);
        txtCost.setCaretColor(new java.awt.Color(0, 246, 237));
        txtCost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCostFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCostFocusLost(evt);
            }
        });
        add(txtCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 380, 320, -1));
        add(jspQuantity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 320, 10));

        lblcust.setFont(new java.awt.Font("Share Tech Mono", 0, 55)); // NOI18N
        lblcust.setForeground(new java.awt.Color(255, 250, 255));
        lblcust.setText("Stock Form ");
        add(lblcust, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 550, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        inputCategory = JOptionPane.showInputDialog(this, "Enter a category");
        if (inputCategory.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a category!");
        } else {
            String sql = "INSERT INTO category (categoryname) VALUES (?)";
            try {
                preparedStatement = conn.prepareStatement(sql);

                preparedStatement.setString(1, inputCategory);

                boolean stmt = preparedStatement.execute();
                JOptionPane.showMessageDialog(null, "Record Saved Successfully"); 
   

                refreshAddCategory();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Some Error : " + e);            
            } 
            finally{
                try {
                    preparedStatement.close();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //JOptionPane.showMessageDialog(null, "test");
        try {
            String sql = "SELECT categoryid FROM category WHERE categoryname = '" + jcbCategory.getSelectedItem().toString() + "'";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            
            while(rs.next()){
                catID = rs.getInt(1);
                System.out.println(catID);
            }
           
            if(txtProductName.getText().equals("") || txtQuantity.getText().equals("") ||  txtIgst.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Some Fields are missing");
            }
            else{
                
                sql = "INSERT INTO product( productname, mass, cost, cgst, sgst, igst, mrp, stock, categoryid) VALUES (?,?,?,?,?,?,?,?,?)";
                preparedStatement = conn.prepareStatement(sql);
                
                float cost = Float.parseFloat(txtCost.getText());
                float  cgst = Float.parseFloat(txtCgst.getText());
                float sgst = Float.parseFloat(txtSgst.getText());
                float igst = Float.parseFloat(txtIgst.getText());

                preparedStatement.setString(1, txtProductName.getText());
                preparedStatement.setString(2, txtQuantity.getText());
                preparedStatement.setFloat(3, cost);
                preparedStatement.setFloat(4, cgst);
                preparedStatement.setFloat(5, sgst);
                preparedStatement.setFloat(6, igst);
                preparedStatement.setFloat(7, (cost + (percentageCal(cost, cgst) + percentageCal(cost, sgst) + percentageCal(cost, igst))));
                preparedStatement.setString(8, txtStock.getText());
                preparedStatement.setInt(9, catID);
                
                boolean stmt = preparedStatement.execute();
                
                JOptionPane.showMessageDialog(null, "Sucessfully inserted!!");
            }
            clearFields();
            
            sql = "SELECT productid, productname, mass, mrp, stock FROM product";
            updateTableData(sql);
        }catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Some Error : " + e);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jspProductNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jspProductNameFocusGained
        
    }//GEN-LAST:event_jspProductNameFocusGained

    private void txtProductNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductNameFocusGained
        jspProductName.setBackground(new Color(0,246,237));
        jspProductName.setForeground(new Color(0,246,237));
        lblProductName.setForeground(new Color(0,246,237));
    }//GEN-LAST:event_txtProductNameFocusGained

    private void txtProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductNameActionPerformed

    private void txtProductNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductNameFocusLost
        jspProductName.setBackground(new Color(255,250,255));
        jspProductName.setForeground(new Color(255,250,255));
        lblProductName.setForeground(new Color(255,250,255));
    }//GEN-LAST:event_txtProductNameFocusLost

    private void txtQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusGained
        jspQuantity.setBackground(new Color(0,246,237));
        jspQuantity.setForeground(new Color(0,246,237));
        lblQuantity.setForeground(new Color(0,246,237));
    }//GEN-LAST:event_txtQuantityFocusGained

    private void txtQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusLost
        jspQuantity.setBackground(new Color(255,250,255));
        jspQuantity.setForeground(new Color(255,250,255));
        lblQuantity.setForeground(new Color(255,250,255));
    }//GEN-LAST:event_txtQuantityFocusLost

    private void txtIgstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIgstFocusGained
        jspStock.setBackground(new Color(0,246,237));
        jspStock.setForeground(new Color(0,246,237));
        lblIgst.setForeground(new Color(0,246,237));
    }//GEN-LAST:event_txtIgstFocusGained

    private void txtIgstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIgstFocusLost
        jspStock.setBackground(new Color(255,250,255));
        jspStock.setForeground(new Color(255,250,255));
        lblIgst.setForeground(new Color(255,250,255));
    }//GEN-LAST:event_txtIgstFocusLost

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            
            sql = "SELECT categoryid FROM category WHERE categoryname = '" +jcbCategory.getSelectedItem().toString() + "'";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            
            while(rs.next()){
                catID = rs.getInt(1);
            }
            
            sql = "UPDATE product SET productname = ?, mass = ?, cost = ?, cgst = ?, sgst = ?, igst = ?, mrp = ?, stock = ? , categoryid = ? WHERE productid = ?";
            
            preparedStatement = conn.prepareStatement(sql);
            
            float cost = Float.parseFloat(txtCost.getText());
            float  cgst = Float.parseFloat(txtCgst.getText());
            float sgst = Float.parseFloat(txtSgst.getText());
            float igst = Float.parseFloat(txtIgst.getText());
            
            preparedStatement.setString(1, txtProductName.getText());
            preparedStatement.setString(2, txtQuantity.getText());
            preparedStatement.setFloat(3, cost);
            preparedStatement.setFloat(4, cgst);
            preparedStatement.setFloat(5, sgst);
            preparedStatement.setFloat(6, igst);
            preparedStatement.setFloat(7, (cost + (percentageCal(cost, cgst) + percentageCal(cost, sgst) + percentageCal(cost, igst))));
            preparedStatement.setString(8, txtStock.getText());
            preparedStatement.setInt(9, catID);
            preparedStatement.setInt(10, Integer.parseInt(selectedProductId));
            
            preparedStatement.execute();
            JOptionPane.showMessageDialog(null, "Record Updated Successfully");
            
            sql = "SELECT productid, productname, mass, mrp, stock FROM product";
            updateTableData(sql);
            btnAdd.setEnabled(true);
            clearFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue : " + e);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jtbStocksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbStocksMouseClicked
        btnAdd.setEnabled(false);
        selectedRow = jtbStocks.getSelectedRow();
        selectedProductId = jtbStocks.getModel().getValueAt(selectedRow, 0).toString();
        try {
            sql = "SELECT * FROM product WHERE productid = " + selectedProductId;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
                
                txtProductName.setText(rs.getString("productname"));
                txtQuantity.setText(rs.getString("mass"));
                txtCost.setText(rs.getString("cost"));
                txtCgst.setText(rs.getString("cgst"));
                txtSgst.setText(rs.getString("sgst"));
                txtIgst.setText(rs.getString("igst"));
                txtStock.setText(rs.getString("stock"));
                catID = rs.getInt(10);
            }
            
            sql = "SELECT categoryname FROM category WHERE categoryid = " + catID;
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            
            while(rs.next()){
                jcbCategory.setSelectedItem(rs.getString("categoryname"));
            }
            
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Some Error : " + e);
        }
    }//GEN-LAST:event_jtbStocksMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(selectedProductId.equals("")){
                JOptionPane.showMessageDialog(null, "Please select some Recocord to delete!");
        }else{
            int btn = JOptionPane.showConfirmDialog(null, "Do you wanna realluy delete record?", "Delete", JOptionPane.YES_NO_OPTION);
            if(btn == JOptionPane.YES_OPTION){
                try {
                    String sql = "DELETE FROM product WHERE productid = ?";
                    preparedStatement = conn.prepareStatement(sql);
                    preparedStatement.setString(1, selectedProductId);
                    preparedStatement.execute();
                    JOptionPane.showMessageDialog(null, "Record Deleted Successfully!");
                    clearFields();
                    sql = "SELECT productid, productname, mass, mrp, stock FROM product";
                    btnAdd.setEnabled(true);
                    updateTableData(sql);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Delete Issue : " + e);
                }finally{
                    try {
                        preparedStatement.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Eroor while closing the statement : " + e);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtCgstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCgstFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCgstFocusGained

    private void txtCgstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCgstFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCgstFocusLost

    private void txtSgstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSgstFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSgstFocusGained

    private void txtSgstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSgstFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSgstFocusLost

    private void txtStockFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStockFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockFocusGained

    private void txtStockFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStockFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockFocusLost

    private void txtCostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCostFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostFocusGained

    private void txtCostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCostFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostFocusLost

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        btnAdd.setBackground(Constants.LIGHT_BLUE);
        btnAdd.setForeground(Constants.ACCENT_BLUE);
        btnAdd.setIcon(IconFontSwing.buildIcon(Constants.addButton, 30, Constants.ACCENT_BLUE));
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        btnAdd.setBackground(Constants.ACCENT_BLUE);
        btnAdd.setForeground(Constants.LIGHT_BLUE);
        btnAdd.setIcon(IconFontSwing.buildIcon(Constants.addButton, 30, Constants.LIGHT_BLUE));
    }//GEN-LAST:event_btnAddMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        btnUpdate.setBackground(Constants.LIGHT_BLUE);
        btnUpdate.setForeground(Constants.ACCENT_BLUE);
        btnUpdate.setIcon(IconFontSwing.buildIcon(Constants.updateButton, 30, Constants.ACCENT_BLUE));
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        btnUpdate.setBackground(Constants.ACCENT_BLUE);
        btnUpdate.setForeground(Constants.LIGHT_BLUE);
        btnUpdate.setIcon(IconFontSwing.buildIcon(Constants.updateButton, 30, Constants.LIGHT_BLUE));
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        btnDelete.setBackground(Constants.LIGHT_BLUE);
        btnDelete.setForeground(Constants.ACCENT_BLUE);
        btnDelete.setIcon(IconFontSwing.buildIcon(Constants.deleteButton, 30, Constants.ACCENT_BLUE));
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        btnDelete.setBackground(Constants.ACCENT_BLUE);
        btnDelete.setForeground(Constants.LIGHT_BLUE);
        btnDelete.setIcon(IconFontSwing.buildIcon(Constants.deleteButton, 30, Constants.LIGHT_BLUE));
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseEntered
        btnClear.setBackground(Constants.LIGHT_BLUE);
        btnClear.setForeground(Constants.ACCENT_BLUE);
        btnClear.setIcon(IconFontSwing.buildIcon(Constants.clearButton, 30, Constants.ACCENT_BLUE));
    }//GEN-LAST:event_btnClearMouseEntered

    private void btnClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseExited
        btnClear.setBackground(Constants.ACCENT_BLUE);
        btnClear.setForeground(Constants.LIGHT_BLUE);
        btnClear.setIcon(IconFontSwing.buildIcon(Constants.clearButton, 30, Constants.LIGHT_BLUE));
    }//GEN-LAST:event_btnClearMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbCategory;
    private javax.swing.JSeparator jspProductName;
    private javax.swing.JSeparator jspQuantity;
    private javax.swing.JSeparator jspQuantity1;
    private javax.swing.JSeparator jspStock;
    private javax.swing.JSeparator jspStock1;
    private javax.swing.JSeparator jspStock2;
    private javax.swing.JSeparator jspStock3;
    private javax.swing.JTable jtbStocks;
    private javax.swing.JLabel lblCategoryName;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblIgst;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblStock1;
    private javax.swing.JLabel lblStock2;
    private javax.swing.JLabel lblcust;
    private javax.swing.JTextField txtCgst;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtIgst;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSgst;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
    private Connection conn = null;
    private PreparedStatement preparedStatement = null;
    private ResultSet rs = null;
    private Statement statement;
    private String inputCategory = null;
    private int catID ;
    private String sql = null;
    private int selectedRow;
    private String selectedProductId;
}
